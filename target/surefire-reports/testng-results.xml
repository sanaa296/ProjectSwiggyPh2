<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-16T13:56:07 GST" name="Command line suite" finished-at="2022-01-16T13:57:47 GST" duration-ms="99645">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner1@4b2bac3f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-01-16T13:56:07 GST" name="Command line test" finished-at="2022-01-16T13:57:47 GST" duration-ms="99645">
      <class name="com.Simplilearn.Testng.TestngFilterTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.Simplilearn.Testng.TestngFilterTest@65e98b1c]" started-at="2022-01-16T13:56:07 GST" name="beforeTest" finished-at="2022-01-16T13:56:09 GST" duration-ms="2130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="CityMainPage()[pri:0, instance:com.Simplilearn.Testng.TestngFilterTest@65e98b1c]" started-at="2022-01-16T13:57:27 GST" name="CityMainPage" finished-at="2022-01-16T13:57:46 GST" duration-ms="18429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CityMainPage -->
        <test-method signature="FilterTest()[pri:0, instance:com.Simplilearn.Testng.TestngFilterTest@65e98b1c]" started-at="2022-01-16T13:57:46 GST" name="FilterTest" finished-at="2022-01-16T13:57:47 GST" depends-on-methods="com.Simplilearn.Testng.TestngFilterTest.CityMainPage" duration-ms="964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterTest -->
        <test-method signature="Search(java.lang.String)[pri:0, instance:com.Simplilearn.Testng.TestngFilterTest@65e98b1c]" started-at="2022-01-16T13:57:47 GST" name="Search" finished-at="2022-01-16T13:57:47 GST" depends-on-methods="com.Simplilearn.Testng.TestngFilterTest.CityMainPage" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'FoodItem' is required by @Test on method Search but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'FoodItem' is required by @Test on method Search but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.handleParameters(Parameters.java:884)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.Simplilearn.Testng.TestngFilterTest@65e98b1c]" started-at="2022-01-16T13:57:47 GST" name="afterTest" finished-at="2022-01-16T13:57:47 GST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.Simplilearn.Testng.TestngFilterTest -->
      <class name="com.Simplilearn.Runner.TestRunner1">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.Simplilearn.Runner.TestRunner1@4b2bac3f]" started-at="2022-01-16T13:56:09 GST" name="setUpClass" finished-at="2022-01-16T13:56:10 GST" duration-ms="460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1de0641b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner1@4b2bac3f]" started-at="2022-01-16T13:56:10 GST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-16T13:56:29 GST" duration-ms="19496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test location in Swiggy site"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Website Swiggy Location Page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.Simplilearn.Runner.TestRunner1@4b2bac3f]" started-at="2022-01-16T13:56:29 GST" name="tearDownClass" finished-at="2022-01-16T13:56:29 GST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.Simplilearn.Runner.TestRunner1 -->
      <class name="com.Simplilearn.Runner.TestRunner2">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" started-at="2022-01-16T13:56:29 GST" name="setUpClass" finished-at="2022-01-16T13:56:29 GST" duration-ms="34" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1de0641b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" started-at="2022-01-16T13:56:29 GST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-16T13:56:48 GST" duration-ms="18926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test multiple location in Swiggy site"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Website Swiggy Location on MainPage]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" started-at="2022-01-16T13:56:48 GST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-16T13:57:08 GST" duration-ms="19940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test multiple location in Swiggy site"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Website Swiggy Location on MainPage]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" started-at="2022-01-16T13:57:08 GST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-16T13:57:27 GST" duration-ms="18991" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test multiple location in Swiggy site"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Website Swiggy Location on MainPage]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [madras] but found [Chennai]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [madras] but found [Chennai]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.Simplilearn.CucumberStepsSwiggyMainPageCityCheck.Check_CityinmainPage(CucumberStepsSwiggyMainPageCityCheck.java:59)
at ✽.user Main Page city is "madras"(file:///C:/Users/USER/eclipse-workspace/ProjectSwiggyPh2/src/test/resources/Features/MainPageSwiggyCityCheck.feature:8)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.Simplilearn.Runner.TestRunner2@49438269]" started-at="2022-01-16T13:57:27 GST" name="tearDownClass" finished-at="2022-01-16T13:57:27 GST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.Simplilearn.Runner.TestRunner2 -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
