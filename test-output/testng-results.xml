<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-18T00:20:48 GST" name="Suite" finished-at="2022-01-18T00:22:41 GST" duration-ms="112521">
    <groups>
    </groups>
    <test started-at="2022-01-18T00:20:48 GST" name="TestExcel" finished-at="2022-01-18T00:22:41 GST" duration-ms="112521">
      <class name="com.Simplilearn.Testng.CuisineExcelTestng">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:20:49 GST" name="beforeTest" finished-at="2022-01-18T00:20:49 GST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="FilterCuisine(java.lang.String,java.lang.String)[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:20:49 GST" name="FilterCuisine" data-provider="excelTestdata" finished-at="2022-01-18T00:21:20 GST" duration-ms="30562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Indian]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.swiggy.com/restaurants?filters=%7B%22CUISINES%22%3A%5B%22Indian%22%5D%7D&sortBy=RELEVANCE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterCuisine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:20 GST" name="afterTest" finished-at="2022-01-18T00:21:20 GST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:20 GST" name="beforeTest" finished-at="2022-01-18T00:21:20 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="FilterCuisine(java.lang.String,java.lang.String)[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:20 GST" name="FilterCuisine" data-provider="excelTestdata" finished-at="2022-01-18T00:21:50 GST" duration-ms="29913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Italian]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.swiggy.com/restaurants?filters=%7B%22CUISINES%22%3A%5B%22Italian%22%5D%7D&sortBy=RELEVANCE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterCuisine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:50 GST" name="afterTest" finished-at="2022-01-18T00:21:50 GST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:50 GST" name="beforeTest" finished-at="2022-01-18T00:21:50 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="FilterCuisine(java.lang.String,java.lang.String)[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:21:50 GST" name="FilterCuisine" data-provider="excelTestdata" finished-at="2022-01-18T00:22:19 GST" duration-ms="29555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chinese]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.swiggy.com/restaurants?filters=%7B%22CUISINES%22%3A%5B%22Chinese%22%5D%7D&sortBy=RELEVANCE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterCuisine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:22:19 GST" name="afterTest" finished-at="2022-01-18T00:22:20 GST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:22:20 GST" name="beforeTest" finished-at="2022-01-18T00:22:20 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="FilterCuisine(java.lang.String,java.lang.String)[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:22:20 GST" name="FilterCuisine" data-provider="excelTestdata" finished-at="2022-01-18T00:22:40 GST" duration-ms="20705" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[https://www.swiggy.com/restaurants?filters=%7B%22CUISINES%22%3A%5B%22Thai%22%5D%7D&sortBy=RELEVANCE]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="MsBqD">...</div> is not clickable at point (1088, 554). Other element would receive the click: <div class="YWy32">...</div>
  (Session info: chrome=97.0.4692.71)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'SANAA-PC-ELITEB', ip: '192.168.1.109', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [63f6be8d544c2d7609b9cf185d4334ea, clickElement {id=57515c8b-9a92-4486-b102-48eeccb59e11}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\USER\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54130}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54130/devtoo..., se:cdpVersion: 97.0.4692.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (63f6be8d544c2d7609b9cf185d4334ea)] -> class: MsBqD]
Session ID: 63f6be8d544c2d7609b9cf185d4334ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="MsBqD">...</div> is not clickable at point (1088, 554). Other element would receive the click: <div class="YWy32">...</div>
  (Session info: chrome=97.0.4692.71)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'SANAA-PC-ELITEB', ip: '192.168.1.109', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [63f6be8d544c2d7609b9cf185d4334ea, clickElement {id=57515c8b-9a92-4486-b102-48eeccb59e11}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\USER\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54130}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:54130/devtoo..., se:cdpVersion: 97.0.4692.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (63f6be8d544c2d7609b9cf185d4334ea)] -> class: MsBqD]
Session ID: 63f6be8d544c2d7609b9cf185d4334ea
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.Simplilearn.Pages.FilterOptionPage.ClickCuisine(FilterOptionPage.java:73)
at com.Simplilearn.Testng.CuisineExcelTestng.FilterCuisine(CuisineExcelTestng.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterCuisine -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.Simplilearn.Testng.CuisineExcelTestng@35aea049]" started-at="2022-01-18T00:22:40 GST" name="afterTest" finished-at="2022-01-18T00:22:41 GST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.Simplilearn.Testng.CuisineExcelTestng -->
    </test> <!-- TestExcel -->
  </suite> <!-- Suite -->
</testng-results>
